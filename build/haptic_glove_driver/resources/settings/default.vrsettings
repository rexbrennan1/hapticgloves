{
    // Driver Settings for Skeletal Hand Tracking
    // This file contains all the configuration options that control how our driver behaves
    // Users can modify these settings to optimize performance for their specific hardware setup
    
    "driver_haptic_glove": {
        
        // === HARDWARE COMMUNICATION SETTINGS ===
        // These control how we talk to the Arduino-based glove hardware
        
        // Serial port configuration
        "serial_port": "COM3",
        "serial_baud_rate": 115200,
        "serial_timeout_ms": 10,
        "serial_retry_attempts": 3,
        "serial_reconnect_interval_ms": 5000,
        
        // Data validation and filtering
        "enable_data_validation": true,
        "max_packet_age_ms": 50,
        "enable_data_smoothing": true,
        "smoothing_factor": 0.3,
        
        // === HAND TRACKING CONFIGURATION ===
        // These settings control which hands are active and how they behave
        
        "enable_left_hand": true,
        "enable_right_hand": true,
        "swap_hands": false,
        
        // Hand positioning in virtual space
        "hand_offset_x": 0.0,
        "hand_offset_y": 0.0, 
        "hand_offset_z": 0.0,
        "hand_scale": 1.0,
        
        // === IMU CALIBRATION AND COORDINATE TRANSFORMATION ===
        // Critical settings for proper hand orientation in VR space
        
        // IMU coordinate system transformation
        // These values transform BNO055 coordinates to OpenVR coordinates
        // Adjust these based on how your IMU is mounted on the glove
        "imu_transform_matrix": [
            1.0,  0.0,  0.0,
            0.0,  0.0, -1.0,
            0.0,  1.0,  0.0
        ],
        
        // IMU calibration offsets (set during calibration process)
        "imu_offset_x": 0.0,
        "imu_offset_y": 0.0,
        "imu_offset_z": 0.0,
        "imu_offset_w": 1.0,
        
        // Enable automatic IMU calibration on startup
        "auto_calibrate_imu": false,
        "calibration_duration_seconds": 10,
        "calibration_stability_threshold": 0.01,
        
        // === FINGER TRACKING CALIBRATION ===
        // These settings map raw potentiometer values to finger curl amounts
        // Each finger has its own calibration range for optimal accuracy
        
        "finger_calibration": {
            "thumb": {
                "min_value": 100,    // Potentiometer value when thumb is fully open
                "max_value": 900,    // Potentiometer value when thumb is fully closed
                "deadzone": 0.05,    // Ignore small movements below this threshold
                "curve_exponent": 1.2 // Exponential curve for more natural feel
            },
            "index": {
                "min_value": 120,
                "max_value": 880,
                "deadzone": 0.05,
                "curve_exponent": 1.1
            },
            "middle": {
                "min_value": 110,
                "max_value": 890,
                "deadzone": 0.05,
                "curve_exponent": 1.1
            },
            "ring": {
                "min_value": 115,
                "max_value": 885,
                "deadzone": 0.05,
                "curve_exponent": 1.15
            },
            "pinky": {
                "min_value": 90,
                "max_value": 920,
                "deadzone": 0.06,
                "curve_exponent": 1.3
            }
        },
        
        // === SKELETAL TRACKING PARAMETERS ===
        // Fine-tune how finger movements translate to bone transforms
        
        // Finger curl distribution across bone segments
        "finger_curl_distribution": {
            "proximal_phalanx": 0.3,   // 30% of curl applied to base segment
            "middle_phalanx": 0.6,     // 60% of curl applied to middle segment  
            "distal_phalanx": 1.0      // 100% of curl applied to tip segment
        },
        
        // Maximum curl angles in degrees for each finger segment
        "max_curl_angles": {
            "thumb_curl": 60.0,
            "finger_curl": 90.0,
            "thumb_opposition": 45.0
        },
        
        // Finger splay (spreading) parameters
        "finger_splay": {
            "enable_splay_detection": false,  // Requires additional sensors
            "max_splay_angle": 20.0,
            "natural_splay_angle": 5.0
        },
        
        // === GESTURE RECOGNITION SETTINGS ===
        // Control how hand gestures are detected and recognized
        
        "gesture_recognition": {
            "enable_gesture_detection": true,
            "gesture_confidence_threshold": 0.7,
            "gesture_hold_time_ms": 250,
            
            // Thresholds for different gestures (0.0-1.0 finger curl values)
            "fist_threshold": 0.8,
            "open_palm_threshold": 0.2,
            "pointing_index_threshold": 0.3,
            "pointing_others_threshold": 0.7,
            "thumbs_up_thumb_threshold": 0.2,
            "thumbs_up_others_threshold": 0.8,
            "pinch_distance_threshold": 0.1
        },
        
        // === HAPTIC FEEDBACK CONFIGURATION ===
        // Control force feedback servos and vibration motors
        
        "haptic_feedback": {
            "enable_force_feedback": true,
            "servo_update_rate_hz": 50,
            "max_force_intensity": 0.8,
            "force_response_curve": 1.5,
            
            // Individual servo calibration
            "servo_calibration": {
                "thumb_neutral": 90,
                "thumb_range": 90,
                "index_neutral": 90,
                "index_range": 90,
                "middle_neutral": 90,
                "middle_range": 90,
                "ring_neutral": 90,
                "ring_range": 90,
                "pinky_neutral": 90,
                "pinky_range": 90
            },
            
            // Safety limits to prevent servo damage
            "safety_limits": {
                "max_servo_angle": 180,
                "min_servo_angle": 0,
                "emergency_stop_threshold": 0.95,
                "overload_protection": true
            }
        },
        
        // === PERFORMANCE AND OPTIMIZATION ===
        // Settings that affect driver performance and VR smoothness
        
        "performance": {
            // Update rates - critical for smooth VR experience
            "target_update_rate_hz": 90,
            "max_update_rate_hz": 120,
            "min_update_rate_hz": 45,
            
            // Threading and CPU optimization
            "use_high_priority_thread": true,
            "enable_cpu_affinity": false,
            "preferred_cpu_core": -1,
            
            // Memory and buffer management
            "input_buffer_size": 256,
            "max_frame_latency": 2,
            "enable_prediction": false,
            "prediction_time_ms": 11.0
        },
        
        // === DEBUGGING AND DEVELOPMENT ===
        // Settings useful for troubleshooting and development
        
        "debug": {
            // Logging configuration
            "enable_debug_logging": false,
            "log_level": "info",  // "debug", "info", "warning", "error"
            "log_skeletal_data": false,
            "log_performance_metrics": false,
            "log_file_path": "",
            
            // Data output for analysis
            "enable_data_recording": false,
            "recording_file_path": "hand_tracking_data.csv",
            "record_raw_sensor_data": false,
            "record_processed_data": false,
            
            // Simulation and testing
            "enable_simulation_mode": false,
            "simulation_hand_movement": "gentle_wave",
            "simulation_update_rate_hz": 90,
            
            // Visual debugging in SteamVR
            "show_bone_debug_info": false,
            "show_coordinate_axes": false,
            "debug_overlay_opacity": 0.7
        },
        
        // === COMPATIBILITY AND FALLBACK OPTIONS ===
        // Settings for maximum compatibility with different VR applications
        
        "compatibility": {
            // Fallback behavior when skeletal tracking fails
            "enable_controller_emulation": true,
            "controller_emulation_type": "vive_controller",
            
            // Application-specific optimizations
            "application_profiles": {
                "vrchat": {
                    "optimize_for_social_vr": true,
                    "reduce_gesture_sensitivity": false
                },
                "half_life_alyx": {
                    "optimize_for_interaction": true,
                    "enhance_trigger_response": true
                },
                "beat_saber": {
                    "disable_finger_tracking": true,
                    "use_controller_mode": true
                }
            },
            
            // Legacy support
            "support_openvr_1x": true,
            "enable_legacy_input_system": false
        },
        
        // === EXPERIMENTAL FEATURES ===
        // Cutting-edge features that may not be stable
        
        "experimental": {
            // Machine learning enhanced tracking
            "enable_ml_pose_estimation": false,
            "ml_model_path": "models/hand_pose_model.onnx",
            
            // Advanced sensor fusion
            "enable_sensor_fusion": false,
            "fusion_confidence_weighting": true,
            
            // Predictive tracking for reduced latency
            "enable_predictive_tracking": false,
            "prediction_algorithm": "kalman",
            
            // Multi-hand gesture recognition
            "enable_two_hand_gestures": false,
            "gesture_timeout_ms": 2000
        },
        
        // === USER INTERFACE SETTINGS ===
        // Control how the driver appears in SteamVR interface
        
        "ui": {
            "show_in_steamvr_menu": true,
            "enable_quick_calibration": true,
            "show_battery_status": false,
            "display_connection_status": true,
            
            // Notification preferences
            "notify_on_connection": true,
            "notify_on_calibration_complete": true,
            "notify_on_errors": true,
            "notification_duration_ms": 3000
        }
    }
}